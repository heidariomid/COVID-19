{"ast":null,"code":"var _jsxFileName = \"/Users/omid/Desktop/coronavirus/covid-19/src/components/Chart/Chart.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport styles from './Chart.module.css';\nimport cx from 'classnames';\nimport { fetchDailyData } from '../../api';\nimport { Bar, Line } from 'react-chartjs-2';\n\nconst Chart = () => {\n  const [dailyData, setDailyData] = useState([]);\n  useEffect(() => {\n    const daily = async () => {\n      const data = await fetchDailyData();\n      setDailyData(data);\n    };\n\n    daily();\n  }, []);\n\n  const lineChartData = () => {\n    return {\n      // labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n      labels: dailyData.map(({\n        date\n      }) => date),\n      // labels: dailyData(({reportDate}) => reportDate),\n      datasets: [{\n        label: 'Infected',\n        borderColor: 'grey',\n        backGroundColor: 'rgba(70, 70, 70, 0.8)',\n        fill: true,\n        fillColor: 'rgba(70, 70, 70, 0.8)',\n        strokeColor: 'rgba(70, 70, 70, 0.8)',\n        pointColor: 'rgba(220,220,220,1)',\n        pointStrokeColor: '#fff',\n        pointHighlightFill: '#fff',\n        pointHighlightStroke: 'rgba(220,220,220,1)',\n        data: dailyData.map(({\n          confirmed\n        }) => confirmed)\n      }, {\n        label: 'Deaths',\n        borderColor: 'red',\n        backGroundColor: 'rgba(255, 0, 0, 0.8)',\n        fill: true,\n        fillColor: 'rgba(255, 0, 0,0.2)',\n        strokeColor: 'rgba(255, 0, 0,1)',\n        pointColor: 'rgba(151,187,205,1)',\n        pointStrokeColor: '#fff',\n        pointHighlightFill: '#fff',\n        pointHighlightStroke: 'rgba(151,187,205,1)',\n        data: dailyData.map(({\n          deaths\n        }) => deaths)\n      }]\n    };\n  };\n\n  const lineChart = dailyData.length ? /*#__PURE__*/React.createElement(Line, {\n    data: lineChartData(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 39\n    }\n  }) : null;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, lineChart);\n};\n\nexport default Chart;","map":{"version":3,"sources":["/Users/omid/Desktop/coronavirus/covid-19/src/components/Chart/Chart.jsx"],"names":["React","useState","useEffect","styles","cx","fetchDailyData","Bar","Line","Chart","dailyData","setDailyData","daily","data","lineChartData","labels","map","date","datasets","label","borderColor","backGroundColor","fill","fillColor","strokeColor","pointColor","pointStrokeColor","pointHighlightFill","pointHighlightStroke","confirmed","deaths","lineChart","length","container"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAOC,EAAP,MAAe,YAAf;AACA,SAAQC,cAAR,QAA6B,WAA7B;AACA,SAAQC,GAAR,EAAaC,IAAb,QAAwB,iBAAxB;;AACA,MAAMC,KAAK,GAAG,MAAM;AACnB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,EAAD,CAA1C;AACAC,EAAAA,SAAS,CAAC,MAAM;AACf,UAAMS,KAAK,GAAG,YAAY;AACzB,YAAMC,IAAI,GAAG,MAAMP,cAAc,EAAjC;AACAK,MAAAA,YAAY,CAACE,IAAD,CAAZ;AACA,KAHD;;AAIAD,IAAAA,KAAK;AACL,GANQ,EAMN,EANM,CAAT;;AAOA,QAAME,aAAa,GAAG,MAAM;AAC3B,WAAO;AACN;AACAC,MAAAA,MAAM,EAAEL,SAAS,CAACM,GAAV,CAAc,CAAC;AAACC,QAAAA;AAAD,OAAD,KAAYA,IAA1B,CAFF;AAGN;AACAC,MAAAA,QAAQ,EAAE,CACT;AACCC,QAAAA,KAAK,EAAE,UADR;AAECC,QAAAA,WAAW,EAAE,MAFd;AAGCC,QAAAA,eAAe,EAAE,uBAHlB;AAICC,QAAAA,IAAI,EAAE,IAJP;AAKCC,QAAAA,SAAS,EAAE,uBALZ;AAMCC,QAAAA,WAAW,EAAE,uBANd;AAOCC,QAAAA,UAAU,EAAE,qBAPb;AAQCC,QAAAA,gBAAgB,EAAE,MARnB;AASCC,QAAAA,kBAAkB,EAAE,MATrB;AAUCC,QAAAA,oBAAoB,EAAE,qBAVvB;AAWCf,QAAAA,IAAI,EAAEH,SAAS,CAACM,GAAV,CAAc,CAAC;AAACa,UAAAA;AAAD,SAAD,KAAiBA,SAA/B;AAXP,OADS,EAcT;AACCV,QAAAA,KAAK,EAAE,QADR;AAECC,QAAAA,WAAW,EAAE,KAFd;AAGCC,QAAAA,eAAe,EAAE,sBAHlB;AAICC,QAAAA,IAAI,EAAE,IAJP;AAKCC,QAAAA,SAAS,EAAE,qBALZ;AAMCC,QAAAA,WAAW,EAAE,mBANd;AAOCC,QAAAA,UAAU,EAAE,qBAPb;AAQCC,QAAAA,gBAAgB,EAAE,MARnB;AASCC,QAAAA,kBAAkB,EAAE,MATrB;AAUCC,QAAAA,oBAAoB,EAAE,qBAVvB;AAWCf,QAAAA,IAAI,EAAEH,SAAS,CAACM,GAAV,CAAc,CAAC;AAACc,UAAAA;AAAD,SAAD,KAAcA,MAA5B;AAXP,OAdS;AAJJ,KAAP;AAiCA,GAlCD;;AAoCA,QAAMC,SAAS,GAAGrB,SAAS,CAACsB,MAAV,gBAAmB,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAElB,aAAa,EAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAnB,GAAqD,IAAvE;AAEA,sBAAO;AAAK,IAAA,SAAS,EAAEV,MAAM,CAAC6B,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmCF,SAAnC,CAAP;AACA,CAhDD;;AAkDA,eAAetB,KAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport styles from './Chart.module.css';\nimport cx from 'classnames';\nimport {fetchDailyData} from '../../api';\nimport {Bar, Line} from 'react-chartjs-2';\nconst Chart = () => {\n\tconst [dailyData, setDailyData] = useState([]);\n\tuseEffect(() => {\n\t\tconst daily = async () => {\n\t\t\tconst data = await fetchDailyData();\n\t\t\tsetDailyData(data);\n\t\t};\n\t\tdaily();\n\t}, []);\n\tconst lineChartData = () => {\n\t\treturn {\n\t\t\t// labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n\t\t\tlabels: dailyData.map(({date}) => date),\n\t\t\t// labels: dailyData(({reportDate}) => reportDate),\n\t\t\tdatasets: [\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Infected',\n\t\t\t\t\tborderColor: 'grey',\n\t\t\t\t\tbackGroundColor: 'rgba(70, 70, 70, 0.8)',\n\t\t\t\t\tfill: true,\n\t\t\t\t\tfillColor: 'rgba(70, 70, 70, 0.8)',\n\t\t\t\t\tstrokeColor: 'rgba(70, 70, 70, 0.8)',\n\t\t\t\t\tpointColor: 'rgba(220,220,220,1)',\n\t\t\t\t\tpointStrokeColor: '#fff',\n\t\t\t\t\tpointHighlightFill: '#fff',\n\t\t\t\t\tpointHighlightStroke: 'rgba(220,220,220,1)',\n\t\t\t\t\tdata: dailyData.map(({confirmed}) => confirmed),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Deaths',\n\t\t\t\t\tborderColor: 'red',\n\t\t\t\t\tbackGroundColor: 'rgba(255, 0, 0, 0.8)',\n\t\t\t\t\tfill: true,\n\t\t\t\t\tfillColor: 'rgba(255, 0, 0,0.2)',\n\t\t\t\t\tstrokeColor: 'rgba(255, 0, 0,1)',\n\t\t\t\t\tpointColor: 'rgba(151,187,205,1)',\n\t\t\t\t\tpointStrokeColor: '#fff',\n\t\t\t\t\tpointHighlightFill: '#fff',\n\t\t\t\t\tpointHighlightStroke: 'rgba(151,187,205,1)',\n\t\t\t\t\tdata: dailyData.map(({deaths}) => deaths),\n\t\t\t\t},\n\t\t\t],\n\t\t};\n\t};\n\n\tconst lineChart = dailyData.length ? <Line data={lineChartData()} /> : null;\n\n\treturn <div className={styles.container}>{lineChart}</div>;\n};\n\nexport default Chart;\n"]},"metadata":{},"sourceType":"module"}